apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: istiocertificates.app.example.com
spec:
  group: app.example.com
  names:
    kind: IstioCertificate
    listKind: IstioCertificateList
    plural: istiocertificates
    singular: istiocertificate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            hosts:
              description: List of Servers > map of list of hosts and port
              items:
                type: string
              minItems: 1
              type: array
            mode:
              description: 'Options: SIMPLE|PASSTHROUGH|MUTUAL'
              enum:
              - SIMPLE
              - PASSTHROUGH
              - MUTUAL
              type: string
            port:
              format: int64
              maximum: 65535
              minimum: 1
              type: integer
            protocol:
              description: 'Options: HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP'
              enum:
              - HTTP
              - HTTPS
              - GRPC
              - HTTP2
              - MONGO
              - TCP
              type: string
            tlsOptions:
              description: 'Options: TLSSecret|TLSSecretRef|TLSSecretPath Supports
                either creating the secret, referencing the secret, or explicitly
                referencing the mount path in the pod.'
              properties:
                tlsSecret:
                  description: 'TODO: Validation must be added to ensure multiple
                    of these values are not set - TLSSecret|TLSSecretRef|TLSSecretPath
                    otherwise there should be some form of hierarchy precedence for
                    which overrides other set values. Specifies TLS Cert/Key to be
                    created'
                  properties:
                    cert:
                      description: Secret map with each key which is base64 encoded
                      type: string
                    key:
                      description: Secret map with each key which is base64 encoded
                      type: string
                  type: object
                tlsSecretPath:
                  description: Specifies TLS Cert/Key Path if not using SDS
                  properties:
                    certPath:
                      description: Specifies the TLS Certificate Path in the running
                        Pod
                      type: string
                    keyPath:
                      description: Specifies the TLS Key Path in the running Pod
                      type: string
                  type: object
                tlsSecretRef:
                  description: Specifies the TLS Secret
                  properties:
                    secretName:
                      type: string
                  type: object
              type: object
            trafficType:
              description: 'Options: "ingress" or "egress"'
              enum:
              - ingress
              - egress
              type: string
          required:
          - hosts
          - port
          - mode
          - protocol
          - trafficType
          - tlsOptions
          type: object
        status:
          properties:
            condition:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              properties:
                createdSecretDetails:
                  description: If TLSSecret has been specificed in the Spec a secret
                    will be created otherwise this field is omit.
                  properties:
                    secretName:
                      description: Secret name that was created due to TLSSecret being
                        supplied in Spec.
                      type: string
                    secretNamespace:
                      description: Namespace in which the secret was created - this
                        may vary depending on Mode. EG. SIMPLE will result in a secret
                        created in istio-system. However, PASSTHROUGH will result
                        in a secret created in the namespace the CRD is applied.
                      type: string
                  type: object
                errorMessage:
                  description: Depending on whether success is false the message will
                    contain the error or cause of failure. However, if success is
                    true the message will simple return a default success message.
                  type: string
                success:
                  description: If the CRD was reconciled correctly without error success
                    will result in true.
                  type: boolean
              type: object
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
